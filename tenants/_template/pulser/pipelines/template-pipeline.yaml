name: "Template Tenant Pipeline"
version: "3.2"
description: "Sample pipeline configuration for tenant template"

# Inherit from org-wide configuration
extends: "../../infra/pulser/org-wide-config.yaml"

# Tenant-specific environment variables
env:
  TENANT_SLUG: "template"
  TENANT_NAME: "Template Client"
  PIPELINE_ENV: "development"

# Tenant-specific pipeline definitions
pipelines:
  content_sync:
    name: "Content Synchronization"
    description: "Sync content from client sources to platform"
    schedule: "0 */6 * * *" # Every 6 hours
    steps:
      - name: "fetch_content"
        action: "execute"
        command: "node scripts/fetch-content.js"
        args:
          - "--tenant={{.TENANT_SLUG}}"
          - "--source=google-drive"
          - "--format=json"
      
      - name: "process_content"
        action: "transform"
        input: "content.json"
        transformations:
          - "normalize_text"
          - "extract_metadata"
          - "generate_embeddings"
      
      - name: "store_content"
        action: "database"
        table: "tenant_content"
        operation: "upsert"
        data: "processed_content.json"

  analytics_report:
    name: "Analytics Reporting"
    description: "Generate weekly analytics reports"
    schedule: "0 9 * * MON" # Monday at 9 AM
    steps:
      - name: "collect_metrics"
        action: "query"
        database: "supabase"
        query: |
          SELECT * FROM analytics_events 
          WHERE tenant_id = (SELECT id FROM tenants WHERE slug = '{{.TENANT_SLUG}}')
          AND created_at >= NOW() - INTERVAL '7 days'
      
      - name: "generate_insights"
        action: "analyze"
        model: "analytics-insights"
        input: "metrics.json"
      
      - name: "create_report"
        action: "generate"
        template: "weekly-report"
        data: "insights.json"
      
      - name: "send_report"
        action: "notify"
        webhook: "{{.SLACK_WEBHOOK_URL}}/analytics"
        attachment: "weekly-report.pdf"

  health_monitor:
    name: "Tenant Health Monitoring"
    description: "Monitor tenant-specific health metrics"
    schedule: "*/10 * * * *" # Every 10 minutes
    steps:
      - name: "check_endpoints"
        action: "http_check"
        endpoints:
          - "{{.BASE_URL}}/{{.TENANT_SLUG}}/health"
          - "{{.BASE_URL}}/{{.TENANT_SLUG}}/api/status"
      
      - name: "check_database"
        action: "db_check"
        tenant_context: "{{.TENANT_SLUG}}"
        queries:
          - "SELECT COUNT(*) FROM projects WHERE tenant_id = (SELECT id FROM tenants WHERE slug = '{{.TENANT_SLUG}}')"
      
      - name: "alert_failures"
        action: "notify"
        condition: "has_failures"
        webhook: "{{.SLACK_WEBHOOK_URL}}/alerts"
        message: "Health check failed for tenant: {{.TENANT_SLUG}}"

# Tenant-specific agents
agents:
  content_processor:
    type: "content"
    description: "Processes and analyzes tenant content"
    tenant_scoped: true
    capabilities:
      - "text_processing"
      - "metadata_extraction"
      - "similarity_analysis"
    
    config:
      max_file_size: "10MB"
      supported_formats: ["pdf", "docx", "txt", "md"]
      processing_timeout: 300

  insight_generator:
    type: "analytics"
    description: "Generates insights from tenant data"
    tenant_scoped: true
    capabilities:
      - "trend_analysis"
      - "pattern_recognition"
      - "report_generation"
    
    config:
      analysis_window: "30d"
      confidence_threshold: 0.8
      report_format: "pdf"

# Data sources
data_sources:
  google_drive:
    type: "external"
    connection:
      auth_type: "oauth2"
      scopes: ["https://www.googleapis.com/auth/drive.readonly"]
    
    sync_schedule: "0 */4 * * *" # Every 4 hours
    file_filters:
      - "*.pdf"
      - "*.docx"
      - "*.xlsx"

  supabase_tenant:
    type: "database"
    connection:
      url: "{{.SUPABASE_URL}}"
      key: "{{.SUPABASE_SERVICE_KEY}}"
    
    tenant_context: "{{.TENANT_SLUG}}"
    tables:
      - "projects"
      - "analytics_events"
      - "tenant_content"

# Security and compliance
security:
  data_retention: "90d"
  encryption_at_rest: true
  audit_logging: true
  pii_detection: true

access_control:
  tenant_isolation: true
  allowed_origins:
    - "{{.BASE_URL}}/{{.TENANT_SLUG}}"
  
  api_permissions:
    - "read_tenant_data"
    - "write_tenant_data"
    - "manage_pipelines"

# Monitoring and alerts
monitoring:
  metrics:
    - "pipeline_execution_time"
    - "error_rate"
    - "data_processing_volume"
  
  alerts:
    error_threshold: 5
    latency_threshold: "30s"
    notification_channels:
      - "slack"
      - "email"