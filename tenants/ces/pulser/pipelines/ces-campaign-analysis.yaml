name: ces-campaign-analysis
version: "1.2.0"
description: "AI-powered campaign effectiveness analysis with multi-channel attribution"

metadata:
  tenant: ces
  category: marketing_analytics
  tags: [campaign, effectiveness, attribution, optimization]
  created_by: pulser_system
  created_at: "2025-06-09T00:00:00Z"

trigger:
  type: api
  endpoint: /api/ces/analyze
  methods: [POST]
  auth_required: true

inputs:
  - name: campaign_data
    type: object
    required: true
    description: "Campaign performance data across all channels"
    schema:
      properties:
        campaign_id:
          type: string
          description: "Unique campaign identifier"
        timeframe:
          type: string
          enum: ["7d", "30d", "90d", "custom"]
          default: "30d"
        channels:
          type: array
          items:
            type: string
          description: "Marketing channels to analyze"
        metrics:
          type: object
          description: "Performance metrics to analyze"

  - name: analysis_config
    type: object
    required: false
    description: "Analysis configuration and preferences"
    schema:
      properties:
        depth:
          type: string
          enum: ["quick", "standard", "comprehensive"]
          default: "standard"
        include_predictions:
          type: boolean
          default: true
        attribution_model:
          type: string
          enum: ["first_touch", "last_touch", "linear", "time_decay", "position_based"]
          default: "time_decay"

stages:
  - name: data_validation
    description: "Validate and clean input campaign data"
    agent: data_validator
    config:
      validation_rules:
        - required_fields: ["campaign_id", "metrics"]
        - data_types: strict
        - date_ranges: valid
      error_handling: strict
    outputs:
      - validated_data

  - name: metric_normalization
    description: "Normalize metrics across different channels"
    agent: metric_normalizer
    depends_on: [data_validation]
    config:
      normalization_rules:
        currency: USD
        timezone: UTC
        attribution_window: 30d
    outputs:
      - normalized_metrics

  - name: channel_attribution
    description: "Apply multi-touch attribution modeling"
    agent: attribution_analyzer
    depends_on: [metric_normalization]
    config:
      model: "{{ inputs.analysis_config.attribution_model }}"
      touchpoint_weighting:
        first_touch: 0.4
        mid_touch: 0.2
        last_touch: 0.4
      decay_rate: 0.5
    outputs:
      - attribution_results

  - name: performance_analysis
    description: "Analyze campaign performance across all metrics"
    agent: performance_analyzer
    depends_on: [channel_attribution]
    config:
      analysis_dimensions:
        - temporal: [daily, weekly, monthly]
        - demographic: [age, gender, location]
        - behavioral: [device, interests, engagement]
      benchmarking:
        industry_standards: enabled
        historical_comparison: enabled
    outputs:
      - performance_insights

  - name: anomaly_detection
    description: "Detect anomalies and unusual patterns"
    agent: anomaly_detector
    depends_on: [performance_analysis]
    config:
      detection_methods:
        - statistical: z_score
        - machine_learning: isolation_forest
        - time_series: seasonal_decomposition
      sensitivity: medium
      alert_thresholds:
        high: 2.5
        medium: 1.5
        low: 1.0
    outputs:
      - anomalies
      - alerts

  - name: predictive_modeling
    description: "Generate predictions and forecasts"
    agent: predictor
    depends_on: [performance_analysis]
    condition: "{{ inputs.analysis_config.include_predictions }}"
    config:
      prediction_horizons: [7d, 30d, 90d]
      models:
        - linear_regression
        - random_forest
        - lstm_neural_network
      confidence_intervals: [80, 95]
    outputs:
      - predictions
      - forecasts

  - name: optimization_recommendations
    description: "Generate AI-powered optimization recommendations"
    agent: optimizer
    depends_on: [performance_analysis, anomaly_detection]
    config:
      optimization_objectives:
        - maximize_roi
        - minimize_cpa
        - increase_reach
        - improve_engagement
      recommendation_types:
        - budget_allocation
        - audience_targeting
        - creative_optimization
        - bidding_strategy
      confidence_threshold: 0.7
    outputs:
      - recommendations

  - name: competitive_analysis
    description: "Analyze competitive landscape and benchmarks"
    agent: competitive_analyzer
    depends_on: [performance_analysis]
    config:
      data_sources:
        - industry_benchmarks
        - competitive_intelligence
        - market_trends
      comparison_metrics:
        - market_share
        - share_of_voice
        - competitive_positioning
    outputs:
      - competitive_insights

  - name: report_generation
    description: "Generate comprehensive analysis report"
    agent: report_generator
    depends_on: [optimization_recommendations, competitive_analysis, predictive_modeling]
    config:
      report_formats: [executive_summary, detailed_analysis, data_export]
      visualizations:
        - performance_trends
        - channel_attribution
        - audience_insights
        - competitive_positioning
      export_formats: [pdf, html, json]
    outputs:
      - executive_report
      - detailed_report
      - data_export

outputs:
  - name: analysis_results
    type: object
    description: "Complete campaign effectiveness analysis"
    schema:
      properties:
        summary:
          type: object
          description: "Executive summary of findings"
        performance:
          type: object
          description: "Detailed performance analysis"
        attribution:
          type: object
          description: "Multi-touch attribution results"
        recommendations:
          type: array
          description: "AI-generated optimization recommendations"
        predictions:
          type: object
          description: "Future performance predictions"
        competitive_insights:
          type: object
          description: "Competitive analysis and benchmarks"
        anomalies:
          type: array
          description: "Detected anomalies and unusual patterns"

  - name: optimization_plan
    type: object
    description: "Actionable optimization plan with prioritized recommendations"

  - name: performance_dashboard
    type: object
    description: "Interactive dashboard data for visualization"

error_handling:
  retry_policy:
    max_retries: 3
    backoff_strategy: exponential
    base_delay: 1s
  
  fallback_strategy:
    - use_cached_data: true
    - simplified_analysis: true
    - alert_stakeholders: true

monitoring:
  metrics:
    - execution_time
    - data_quality_score
    - prediction_accuracy
    - recommendation_adoption_rate
  
  alerts:
    - execution_failure
    - data_quality_issues
    - anomaly_detection_failure
    - prediction_confidence_low

security:
  data_privacy:
    - pii_detection: enabled
    - data_anonymization: required
    - audit_logging: comprehensive
  
  access_control:
    - role_based_permissions: enabled
    - api_rate_limiting: enabled
    - tenant_isolation: strict

integration:
  data_sources:
    - supabase: campaign_data
    - google_analytics: web_metrics
    - facebook_ads: social_metrics
    - google_ads: search_metrics
    - salesforce: crm_data
  
  output_destinations:
    - supabase: analysis_results
    - slack: alert_notifications
    - email: executive_reports
    - dashboard: real_time_updates

versioning:
  schema_version: "1.2.0"
  compatibility:
    backward_compatible: true
    migration_required: false
  
  changelog:
    - version: "1.2.0"
      changes: "Added competitive analysis and enhanced attribution modeling"
    - version: "1.1.0"
      changes: "Added predictive modeling and anomaly detection"
    - version: "1.0.0"
      changes: "Initial release with basic campaign analysis"